The ``2-matrix_divided`` module
===============================
Using ``matrix_divided``
------------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:

      >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    # uniform matrix, div is 3
    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    # nonuniform matrix, div is 2
    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 2))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    # matrix with int and float, div is 2
    >>> print(matrix_divided([[1, 2, 3], [4.0, 5.5, 6.2]], 2))
    [[0.5, 1.0, 1.5], [2.0, 2.75, 3.1]]

    # uniform matrix, div is 0
    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    # matrix with string, div is 2
    >>> print(matrix_divided([[1, 'string', 3], [4, 5, 6]], 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    # matrix is None
    >>> print(matrix_divided(None, 2))
    Traceback (most recent call last):
    TypeError: 'NoneType' object is not subscriptable

    # matrix with int and True, False, div is 2
    >>> print(matrix_divided([[True, False, 3], [4.0, 5.5, 6.2]], 2))
    [[0.5, 0.0, 1.5], [2.0, 2.75, 3.1]]
