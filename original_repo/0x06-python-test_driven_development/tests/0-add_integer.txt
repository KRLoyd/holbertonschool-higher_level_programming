The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

First import ``add_integer`` from the ``0-add_integer`` module:

      >>> add_integer = __import__('0-add_integer').add_integer

Now use it:
    # float and int
    >>> add_integer(5.0, 5)
    10

    # int and float
    >>> add_integer(6, 7.0)
    13

    # string and int
    >>> add_integer('Woah', 5)
    Traceback (most recent call last):
    TypeError: a must be an integer

    # int and string
    >>> add_integer(8, 'you')
    Traceback (most recent call last):
    TypeError: b must be an integer

    # large number
    >>> add_integer(999999999999, 1)
    1000000000000

    # None
    >>> add_integer(None, None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    # bool and int
    >>> add_integer(True, 45)
    46

    # bool and bool
    >>> add_integer(False, True)
    1

    # try a list 
    >>> add_integer([1, 2, 3], 5)
    Traceback (most recent call last):
    TypeError: a must be an integer

   # no args
   >>> add_integer()
   Traceback (most recent call last):
   TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

   # extra args
   >>> add_integer(3, 4, 6)
   Traceback (most recent call last):
   TypeError: add_integer() takes 2 positional arguments but 3 were given
